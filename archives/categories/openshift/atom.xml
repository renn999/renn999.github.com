<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  
  <title><![CDATA[Category: openshift | 老伯筆記]]></title>
  <link href="http://www.renn999.cc//archives/categories/openshift/atom.xml" rel="self"/>
  
  <link href="http://www.renn999.cc/"/>
  <updated>2016-05-14T23:37:21+0800</updated>
  <id>http://www.renn999.cc/</id>
  <author>
    <name><![CDATA[renn999]]></name>
    <email><![CDATA[renn999@gmail.com]]></email>
  </author>
  <generator uri="http://bbk.renn999.twbbs.org/pyblogtle">pyBlogtle</generator>

  
  <entry>
    <title type="html"><![CDATA[OpenShift Daily Backup and Push to Github or Bitbucket]]></title>
    <link href="http://www.renn999.cc/archives/924/"/>
    <updated>2014-07-13T15:41:00+0800</updated>
    <id>http://www.renn999.cc/archives/924/</id>
    <content type="html"><![CDATA[<h1>我是廢話</h1>
<hr />
<p>嘛~！(滾來滾去~！</p>
<h1>正題開始</h1>
<hr />
<p>在 <a href="https://www.openshift.com" title="OpenShift">OpenShift</a> 上雖然有提供備份功能，但是僅只要備份 SQL 資料還是牛刀一把，當然 <a href="https://www.openshift.com" title="OpenShift">OpenShift</a> 尚有提供 Cron 等工具，反而直接 dump sql 資料出來反而是一個比較直覺的方法。我也看過不少的做法，例如<a href="http://www.skyebook.net/blog/2012/08/openshift-postgresql-backups/">這篇</a>利用 rsync ，但是固定一段時間就要去下一次指令。所以我就想說有沒有直接可以 psuh 上 git private repo 的方法，這樣就不用固定都還要從 app 上拉下來。</p>
<!--more-->

<p>但是因為 <a href="https://www.openshift.com" title="OpenShift">OpenShift</a> 上權限的關系，要 ssh 真是一件大工程，裡面唯一個可以寫入又不會被清掉的資料夾大概就只有一個 <code>$OPENSHIFT_DATA_DIR</code> ，可以用的指令也算不錯多 <code>ssh-keygen</code>、<code>ssh-agent</code>...等，繞個路應該還是可以達到想要的效果。</p>
<p>當然 ssh-keygen 等相關技術文件請參閱 <a href="https://github.com">github</a> <a href="https://help.github.com/articles/generating-ssh-keys">Generating SSH Keys</a> 文章，但是其中在 ssh-keygen 要產生 key 時會問 key 要存放在哪裡，請將其指定到 <code>$OPENSHIFT_DATA_DIR</code> 中，接著就可以把 pubkey 加入到 github 或其他類似網站的信任清單中後，就可以測試了。</p>

<figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span></pre></td><td class='code'><pre><code><span class='line'><span class="nb">eval</span> <span class="s2">&quot;$(ssh-agent -s)&quot;</span></span>
<span class='line'>ssh-add <span class="nv">$OPENSHIFT_DATA_DIR</span><span class="s1">&#39;your/id_rsa/key/path&#39;</span></span>
<span class='line'>ssh -o <span class="nv">UserKnownHostsFile</span><span class="o">=</span>/dev/null -o <span class="nv">StrictHostKeyChecking</span><span class="o">=</span>no -T git@github.com</span>
<span class='line'>killall ssh-agent</span>
<span class='line'></span></code></pre></td></tr></table></div></figure>


<p>如果看到</p>

<figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span></pre></td><td class='code'><pre><code><span class='line'>Hi username! You&#39;ve successfully authenticated, but GitHub does not provide shell access.</span>
<span class='line'></span></code></pre></td></tr></table></div></figure>


<p>表示成功了，但在這裡算是完成步驟的三分之二而已，當然要讓 git 的 ssh 作用還要建立一個假的 ssh 在 <code>$OPENSHIFT_DATA_DIR</code> 中</p>

<figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span></pre></td><td class='code'><pre><code><span class='line'><span class="nb">cd</span> <span class="nv">$OPENSHIFT_DATA_DIR</span></span>
<span class='line'><span class="nb">echo</span> <span class="s1">&#39;ssh -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no $*&#39;</span> &gt; ssh</span>
<span class='line'>chmod +x ssh</span>
<span class='line'></span></code></pre></td></tr></table></div></figure>


<p>當然就可以將相關的 git 資料夾建立 init add remote 相關資訊建立好後就可以寫入到 cron 中</p>

<figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'> 1</span>
<span class='line-number'> 2</span>
<span class='line-number'> 3</span>
<span class='line-number'> 4</span>
<span class='line-number'> 5</span>
<span class='line-number'> 6</span>
<span class='line-number'> 7</span>
<span class='line-number'> 8</span>
<span class='line-number'> 9</span>
<span class='line-number'>10</span></pre></td><td class='code'><pre><code><span class='line'><span class="c">##copy or generate backup file into the folder. and cd into it.</span></span>
<span class='line'>...</span>
<span class='line'><span class="c">##start git commend</span></span>
<span class='line'>git add .</span>
<span class='line'>git commit -a -m <span class="s2">&quot;git commit message&quot;</span></span>
<span class='line'></span>
<span class='line'><span class="nb">eval</span> <span class="s2">&quot;$(ssh-agent -s)&quot;</span></span>
<span class='line'>ssh-add <span class="nv">$OPENSHIFT_DATA_DIR</span><span class="s1">&#39;your/id_rsa/key/path&#39;</span></span>
<span class='line'><span class="nv">GIT_TRACE</span><span class="o">=</span>1 <span class="nv">GIT_SSH</span><span class="o">=</span><span class="nv">$OPENSHIFT_DATA_DIR</span><span class="s2">&quot;ssh&quot;</span> git push</span>
<span class='line'>killall ssh-agent</span>
<span class='line'></span></code></pre></td></tr></table></div></figure>


<p>這樣時間一到就如果有任何變動的話就會 commit 並且 push 到相關的 git repo 中了。</p>]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[OpenShift MySQL User Name Setup in php config file]]></title>
    <link href="http://www.renn999.cc/archives/923/"/>
    <updated>2014-07-12T12:59:00+0800</updated>
    <id>http://www.renn999.cc/archives/923/</id>
    <content type="html"><![CDATA[<h1>我是廢話</h1>
<hr />
<p>離上次的 blog 更新都快要一年了，雖然說人家說公務員怎樣好又怎樣好，總歸一句話只有「穩定」而已，反倒是說進了公司後總是被告戒言行要注意，這真的是這樣，不能像以前年輕那樣一天到晚都在「中二」的言論等云云，更不能寫些「官場現形記」被肉搜到也不好玩。看到不爽的事情總是都要自己吞掉，公務機關就是沒有一定的淘汰機制，即使做得在爛都不會有事，要淘汰更是難上加難。</p>
<p>反正現在時間多了，就可以玩玩以前玩的東西了，反倒是說以前玩的東西反而讓我在工作上真的是如虎添翼。</p>
<h1>正題開始</h1>
<hr />
<p>前幾天在 <a href="http://www.godaddy.com/" title="godaddy">godaddy</a> 上刷了一個 renn999.cc 的網域後總算完成了年輕的時候一個心願，順便就把 blog 等網站的網址更新了，現在連到舊的 renn999.twbbs.org 應該都會自動導到 renn999.cc 了。</p>
<p>有了就新的 domain name 後，當然就是把以前玩過的東西架構又拿出來玩了，雖然說沒有自己的 Server 但是有 <a href="https://www.openshift.com" title="OpenShift">OpenShift</a> 老實說就差不多了</p>
<!--more-->

<p>當然就想說把 <a href="http://yourls.org/" title="YOURLS">YOURLS</a> 實裝在 <a href="https://www.openshift.com" title="OpenShift">OpenShift</a> 上，但有一個非常大的問題就是在 DB 上，剛好在 OpenShift <a href="https://github.com/openshift/wordpress-example/blob/master/.openshift/config/wp-config.php" title="Wordpress-example">wordpress-example</a> 上看到要怎麼處理就想說紀錄一下。</p>
<p>其實只要在 config php 中加入</p>

<figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span></pre></td><td class='code'><pre><code><span class='line'><span class="cp">&lt;?php</span></span>
<span class='line'><span class="nb">define</span><span class="p">(</span><span class="s1">&#39;DB_HOST&#39;</span><span class="p">,</span> <span class="nb">getenv</span><span class="p">(</span><span class="s1">&#39;OPENSHIFT_MYSQL_DB_HOST&#39;</span><span class="p">));</span></span>
<span class='line'><span class="nb">define</span><span class="p">(</span><span class="s1">&#39;DB_PORT&#39;</span><span class="p">,</span> <span class="nb">getenv</span><span class="p">(</span><span class="s1">&#39;OPENSHIFT_MYSQL_DB_PORT&#39;</span><span class="p">));</span></span>
<span class='line'><span class="nb">define</span><span class="p">(</span><span class="s1">&#39;DB_USER&#39;</span><span class="p">,</span> <span class="nb">getenv</span><span class="p">(</span><span class="s1">&#39;OPENSHIFT_MYSQL_DB_USERNAME&#39;</span><span class="p">));</span></span>
<span class='line'><span class="nb">define</span><span class="p">(</span><span class="s1">&#39;DB_PASS&#39;</span><span class="p">,</span> <span class="nb">getenv</span><span class="p">(</span><span class="s1">&#39;OPENSHIFT_MYSQL_DB_PASSWORD&#39;</span><span class="p">));</span></span>
<span class='line'><span class="nb">define</span><span class="p">(</span><span class="s1">&#39;DB_NAME&#39;</span><span class="p">,</span> <span class="nb">getenv</span><span class="p">(</span><span class="s1">&#39;OPENSHIFT_GEAR_NAME&#39;</span><span class="p">));</span></span>
<span class='line'></span></code></pre></td></tr></table></div></figure>


<p>沒想到這麼簡單，這樣就不用在另外去記 <a href="https://www.openshift.com" title="OpenShift">OpenShift</a> 建立好的 MySQL 帳號密碼等， <a href="https://www.openshift.com" title="OpenShift">OpenShift</a> 真是好物啊。</p>]]></content>
  </entry>
  
</feed>