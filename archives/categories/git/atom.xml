<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  
  <title><![CDATA[Category: git | 老伯筆記]]></title>
  <link href="http://www.renn999.cc//archives/categories/git/atom.xml" rel="self"/>
  
  <link href="http://www.renn999.cc/"/>
  <updated>2014-07-13T16:52:37+0800</updated>
  <id>http://www.renn999.cc/</id>
  <author>
    <name><![CDATA[renn999]]></name>
    <email><![CDATA[renn999@gmail.com]]></email>
  </author>
  <generator uri="http://bbk.renn999.twbbs.org/pyblogtle">pyBlogtle</generator>

  
  <entry>
    <title type="html"><![CDATA[OpenShift Daily Backup and Push to Git]]></title>
    <link href="http://www.renn999.cc/archives/924/"/>
    <updated>2014-07-13T15:41:00+0800</updated>
    <id>http://www.renn999.cc/archives/924/</id>
    <content type="html"><![CDATA[<h1>我是廢話</h1>
<hr />
<p>嘛~！(滾來滾去~！</p>
<h1>正題開始</h1>
<hr />
<p>在 <a href="https://www.openshift.com" title="OpenShift">OpenShift</a> 上雖然有提供備份功能，但是僅只要備份 SQL 資料還是牛刀一把，當然 <a href="https://www.openshift.com" title="OpenShift">OpenShift</a> 尚有提供 Cron 等工具，反而直接 dump sql 資料出來反而是一個比較直覺的方法。我也看過不少的做法，例如<a href="http://www.skyebook.net/blog/2012/08/openshift-postgresql-backups/">這篇</a>利用 rsync ，但是固定一段時間就要去下一次指令。所以我就想說有沒有直接可以 psuh 上 git private repo 的方法，這樣就不用固定都還要從 app 上拉下來。</p>
<!--more-->

<p>但是因為 <a href="https://www.openshift.com" title="OpenShift">OpenShift</a> 上權限的關系，要 ssh 真是一件大工程，裡面唯一個可以寫入又不會被清掉的資料夾大概就只有一個 <code>$OPENSHIFT_DATA_DIR</code> ，可以用的指令也算不錯多 <code>ssh-keygen</code>、<code>ssh-agent</code>...等，繞個路應該還是可以達到想要的效果。</p>
<p>當然 ssh-keygen 等相關技術文件請參閱 <a href="https://github.com">github</a> <a href="https://help.github.com/articles/generating-ssh-keys">Generating SSH Keys</a> 文章，但是其中在 ssh-keygen 要產生 key 時會問 key 要存放在哪裡，請將其指定到 <code>$OPENSHIFT_DATA_DIR</code> 中，接著就可以把 pubkey 加入到 github 或其他類似網站的信任清單中後，就可以測試了。</p>

<figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span></pre></td><td class='code'><pre><code><span class='line'><span class="nb">eval</span> <span class="s2">&quot;$(ssh-agent -s)&quot;</span></span>
<span class='line'>ssh-add <span class="nv">$OPENSHIFT_DATA_DIR</span><span class="s1">&#39;your/id_rsa/key/path&#39;</span></span>
<span class='line'>ssh -o <span class="nv">UserKnownHostsFile</span><span class="o">=</span>/dev/null -o <span class="nv">StrictHostKeyChecking</span><span class="o">=</span>no -T git@github.com</span>
<span class='line'>killall ssh-agent</span>
<span class='line'></span></code></pre></td></tr></table></div></figure>


<p>如果看到</p>

<figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span></pre></td><td class='code'><pre><code><span class='line'>Hi username! You&#39;ve successfully authenticated, but GitHub does not provide shell access.</span>
<span class='line'></span></code></pre></td></tr></table></div></figure>


<p>表示成功了，但在這裡算是完成步驟的三分之二而已，當然要讓 git 的 ssh 作用還要建立一個假的 ssh 在 <code>$OPENSHIFT_DATA_DIR</code> 中</p>

<figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span></pre></td><td class='code'><pre><code><span class='line'><span class="nb">cd</span> <span class="nv">$OPENSHIFT_DATA_DIR</span></span>
<span class='line'><span class="nb">echo</span> <span class="s1">&#39;ssh -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no $*&#39;</span> &gt; ssh</span>
<span class='line'>chmod +x ssh</span>
<span class='line'></span></code></pre></td></tr></table></div></figure>


<p>當然就可以將相關的 git 資料夾建立 init add remote 相關資訊建立好後就可以寫入到 cron 中</p>

<figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'> 1</span>
<span class='line-number'> 2</span>
<span class='line-number'> 3</span>
<span class='line-number'> 4</span>
<span class='line-number'> 5</span>
<span class='line-number'> 6</span>
<span class='line-number'> 7</span>
<span class='line-number'> 8</span>
<span class='line-number'> 9</span>
<span class='line-number'>10</span></pre></td><td class='code'><pre><code><span class='line'><span class="c">##copy or generate backup file into the folder. and cd into it.</span></span>
<span class='line'>...</span>
<span class='line'><span class="c">##start git commend</span></span>
<span class='line'>git add .</span>
<span class='line'>git commit -a -m <span class="s2">&quot;git commit message&quot;</span></span>
<span class='line'></span>
<span class='line'><span class="nb">eval</span> <span class="s2">&quot;$(ssh-agent -s)&quot;</span></span>
<span class='line'>ssh-add <span class="nv">$OPENSHIFT_DATA_DIR</span><span class="s1">&#39;your/id_rsa/key/path&#39;</span></span>
<span class='line'><span class="nv">GIT_TRACE</span><span class="o">=</span>1 <span class="nv">GIT_SSH</span><span class="o">=</span><span class="nv">$OPENSHIFT_DATA_DIR</span><span class="s2">&quot;ssh&quot;</span> git push</span>
<span class='line'>killall ssh-agent</span>
<span class='line'></span></code></pre></td></tr></table></div></figure>


<p>這樣時間一到就如果有任何變動的話就會 commit 並且 push 到相關的 git repo 中了。</p>]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Octopress調教メモ之四]]></title>
    <link href="http://www.renn999.cc/archives/909/"/>
    <updated>2012-10-15T10:50:00+0800</updated>
    <id>http://www.renn999.cc/archives/909/</id>
    <content type="html"><![CDATA[<p>前一段時間都是把 Octopress 的 source 跟網頁一起放在 <a href="http://github.com">github</a> 上，最近也是順便看了一下別的 Git repository hosting ，有很多的的服務是都還算不錯的，像是 <a href="http://bitbucket.org">bitbucket</a> (最近他們把所有的介面改過發現到真的還不錯)。</p>
<!--more-->

<p>像說我把我的 Octopress deploy 到 <a href="http://github.com">github</a> 上，但是在 <a href="http://bitbucket.org">bitbucket</a> 上開了一個 private 的 repo 來放 source 主要是將一些 private post 找到可以放的家。要不然真的一些 private post 放在 github 上的話真的一覽無遺...Q_Q</p>

<figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span></pre></td><td class='code'><pre><code><span class='line'><span class="n">git</span> <span class="n">remote</span> <span class="n">add</span> <span class="n">bitbucket</span> <span class="o">&lt;</span><span class="n">your</span> <span class="n">repo</span> <span class="n">url</span><span class="o">&gt;</span></span>
<span class='line'><span class="n">git</span> <span class="n">push</span> <span class="n">bitbucket</span> <span class="n">source</span></span>
<span class='line'></span></code></pre></td></tr></table></div></figure>


<p>而其實 <a href="http://bitbucket.org">bitbucket</a> 的申請方式差不多，而且也可以像 <a href="http://github.com">github</a> 把網頁 deploy 上去，這真的讓我也碘考慮想要搬家了...OTZ</p>
<p>看到很多人都在抱怨 <a href="http://octopress.org/">octopress</a> 的 generate 速度非常慢，有的強者甚至自己利用其他語言刻了一個出來，像是<a href="http://zespia.tw/blog/2012/10/11/hexo-debut/">這裡</a> 是用 node.js 造出來的，其實我也有打算想要造一個，但是我是想要用Python+Flask而且目前已經有了框架出來了。</p>]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[bash prompt加上目前所在的git branch]]></title>
    <link href="http://www.renn999.cc/archives/908/"/>
    <updated>2012-10-01T19:17:00+0800</updated>
    <id>http://www.renn999.cc/archives/908/</id>
    <content type="html"><![CDATA[<p>最近因為 octopress 的關係，把重大學時代某位NE網友提起的 git 給重新翻出來學，順便把一些在硬碟中塵封已久的一些小 project 給 remote 到一些像是 <a href="http://github.com">github</a> <a href="http://bitbucket.org">bitbucket</a> 等服務上面去。</p>
<!--more-->

<p>但是我選擇了 <a href="http://bitbucket.org">bitbucket</a> 因為他有無限個 private repository ，讓我可以把一些比較不想要讓人家看到的<s>羞人</s> project 存起來，這樣哪天電腦炸掉了還有地方可以把 source 叫回來...OTZ</p>
<p>但是在開 git 的 project 時，時常會忘掉說在己現在處在那個 branch 這真的是非常麻煩的一件事情，當初在 <a href="https://www.pythonanywhere.com/">pythonanywhere</a> 中操作他們的 bash 才發現到他們的 bash prompt 可以顯示出目前所在的 branch ， google 以後才知道在 bash prompt 上可以加上 <code>__git_ps1</code> git branch 的資訊，這對於說時常要切換不同 branch 的人真的非常的方便。</p>

<figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span></pre></td><td class='code'><pre><code><span class='line'>PS1=&#39;<span class="cp">${</span><span class="n">debian_chroot</span><span class="p">:</span><span class="o">+</span><span class="p">(</span><span class="err">$</span><span class="n">debian_chroot</span><span class="p">)</span><span class="cp">}</span>\[\033[01;32m\]\u\[\033[00m\] @ \[\033[01;31m\]\w\[\033[01;34m\]$(__git_ps1)\[\033[00m :\n&gt;</span>
<span class='line'></span></code></pre></td></tr></table></div></figure>


<p>這是我的 bash prompt 而在 <code>.bashrc</code> 中修改之後就會變成這樣</p>
<p>wzxhzdk:0</p>
<p>這樣就可以隨時之道自己處在那個branch中了。</p>]]></content>
  </entry>
  
</feed>